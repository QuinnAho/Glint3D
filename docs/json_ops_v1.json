{
  "$schema": "http://json-schema.org/draft-07/schema#",
  "$id": "https://example.com/schemas/json_ops_v1.json",
  "title": "JSON Ops v1",
  "description": "Minimal deterministic JSON command set for scene manipulation and rendering.",
  "oneOf": [
    { "$ref": "#/definitions/op" },
    {
      "type": "array",
      "items": { "$ref": "#/definitions/op" }
    }
  ],
  "definitions": {
    "vec3": {
      "type": "array",
      "items": { "type": "number" },
      "minItems": 3,
      "maxItems": 3
    },
    "color3": {
      "type": "array",
      "items": {
        "type": "number",
        "minimum": 0,
        "maximum": 1
      },
      "minItems": 3,
      "maxItems": 3
    },
    "transform": {
      "type": "object",
      "properties": {
        "position": { "$ref": "#/definitions/vec3" },
        "rotation_deg": { "$ref": "#/definitions/vec3" },
        "scale": { "$ref": "#/definitions/vec3" }
      },
      "additionalProperties": false
    },
    "transform_delta": { "$ref": "#/definitions/transform" },

    "op": {
      "type": "object",
      "required": [ "op" ],
      "properties": {
        "op": {
          "type": "string",
          "enum": [
            "load",
            "duplicate",
            "transform",
            "set_material",
            "add_light",
            "set_camera",
            "render"
          ]
        }
      },
      "allOf": [
        { "$ref": "#/definitions/op_load" },
        { "$ref": "#/definitions/op_duplicate" },
        { "$ref": "#/definitions/op_transform" },
        { "$ref": "#/definitions/op_set_material" },
        { "$ref": "#/definitions/op_add_light" },
        { "$ref": "#/definitions/op_set_camera" },
        { "$ref": "#/definitions/op_render" }
      ]
    },

    "op_load": {
      "if": { "properties": { "op": { "const": "load" } } },
      "then": {
        "properties": {
          "path": { "type": "string", "minLength": 1 },
          "name": { "type": "string" },
          "transform": { "$ref": "#/definitions/transform" }
        },
        "required": [ "op", "path" ],
        "additionalProperties": false
      }
    },

    "op_duplicate": {
      "if": { "properties": { "op": { "const": "duplicate" } } },
      "then": {
        "properties": {
          "source": { "type": "string", "minLength": 1 },
          "name": { "type": "string", "minLength": 1 },
          "transform_delta": { "$ref": "#/definitions/transform_delta" }
        },
        "required": [ "op", "source", "name" ],
        "additionalProperties": false
      }
    },

    "op_transform": {
      "if": { "properties": { "op": { "const": "transform" } } },
      "then": {
        "properties": {
          "target": { "type": "string", "minLength": 1 },
          "mode": { "type": "string", "enum": [ "set", "delta" ], "default": "set" },
          "transform": { "$ref": "#/definitions/transform" },
          "transform_delta": { "$ref": "#/definitions/transform_delta" }
        },
        "required": [ "op", "target" ],
        "allOf": [
          {
            "if": { "properties": { "mode": { "const": "set" } } },
            "then": { "required": [ "transform" ] }
          },
          {
            "if": { "properties": { "mode": { "const": "delta" } } },
            "then": { "required": [ "transform_delta" ] }
          }
        ],
        "additionalProperties": false
      }
    },

    "material_props": {
      "type": "object",
      "properties": {
        "color": { "$ref": "#/definitions/color3" },
        "specular": { "$ref": "#/definitions/color3" },
        "ambient": { "$ref": "#/definitions/color3" },
        "shininess": { "type": "number", "minimum": 0 },
        "roughness": { "type": "number", "minimum": 0 },
        "metallic": { "type": "number", "minimum": 0 }
      },
      "additionalProperties": false
    },

    "op_set_material": {
      "if": { "properties": { "op": { "const": "set_material" } } },
      "then": {
        "properties": {
          "target": { "type": "string", "minLength": 1 },
          "material_name": { "type": "string", "minLength": 1 },
          "material": { "$ref": "#/definitions/material_props" }
        },
        "required": [ "op", "target" ],
        "oneOf": [
          { "required": [ "material_name" ] },
          { "required": [ "material" ] }
        ],
        "additionalProperties": false
      }
    },

    "op_add_light": {
      "if": { "properties": { "op": { "const": "add_light" } } },
      "then": {
        "properties": {
          "type": { "type": "string", "enum": [ "point", "directional" ] },
          "position": { "$ref": "#/definitions/vec3" },
          "direction": { "$ref": "#/definitions/vec3" },
          "color": { "$ref": "#/definitions/color3" },
          "intensity": { "type": "number", "minimum": 0 }
        },
        "required": [ "op", "type" ],
        "allOf": [
          {
            "if": { "properties": { "type": { "const": "point" } } },
            "then": { "required": [ "position" ] }
          },
          {
            "if": { "properties": { "type": { "const": "directional" } } },
            "then": { "required": [ "direction" ] }
          }
        ],
        "additionalProperties": false
      }
    },

    "op_set_camera": {
      "if": { "properties": { "op": { "const": "set_camera" } } },
      "then": {
        "properties": {
          "position": { "$ref": "#/definitions/vec3" },
          "target": { "$ref": "#/definitions/vec3" },
          "front": { "$ref": "#/definitions/vec3" },
          "up": { "$ref": "#/definitions/vec3" },
          "fov_deg": { "type": "number", "minimum": 1, "maximum": 179 },
          "near": { "type": "number", "exclusiveMinimum": 0 },
          "far": { "type": "number", "exclusiveMinimum": 0 }
        },
        "required": [ "op" ],
        "oneOf": [
          { "required": [ "position", "target" ] },
          { "required": [ "position", "front", "up" ] }
        ],
        "additionalProperties": false
      }
    },

    "op_render": {
      "if": { "properties": { "op": { "const": "render" } } },
      "then": {
        "properties": {
          "target": { "type": "string", "enum": [ "screen", "image" ], "default": "screen" },
          "path": { "type": "string" },
          "width": { "type": "integer", "minimum": 1 },
          "height": { "type": "integer", "minimum": 1 }
        },
        "required": [ "op" ],
        "allOf": [
          {
            "if": { "properties": { "target": { "const": "image" } } },
            "then": { "required": [ "path" ] }
          }
        ],
        "additionalProperties": false
      }
    }
  }
}

