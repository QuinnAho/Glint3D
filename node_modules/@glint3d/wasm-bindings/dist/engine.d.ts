export type JsonOps = any;
export type SceneSnapshot = any;
export type EngineInfo = any;
declare global {
    interface Window {
        Module: EmscriptenModule & {
            canvas?: HTMLCanvasElement;
            calledRun?: boolean;
            onRuntimeInitialized?: (() => void) | null;
        };
    }
}
export interface EmscriptenModule {
    cwrap: (ident: string, returnType: string, argTypes?: string[]) => (...args: any[]) => any;
    ccall: (ident: string, returnType: string, argTypes?: string[], args?: any[]) => any;
    FS_createPath: (parent: string, path: string, canRead: boolean, canWrite: boolean) => void;
    FS_createDataFile: (parent: string, name: string, data: Uint8Array, canRead: boolean, canWrite: boolean, canOwn: boolean) => void;
}
declare let engineState: 'loading' | 'ready' | 'error' | null;
export declare class EngineError extends Error {
    cause?: unknown | undefined;
    constructor(message: string, cause?: unknown | undefined);
}
export interface EngineLoadOptions {
    scriptPath?: string;
    timeoutMs?: number;
    canvas?: HTMLCanvasElement;
}
/**
 * Load and initialize the WebAssembly engine
 */
export declare function loadEngine(options?: EngineLoadOptions): Promise<void>;
/**
 * Check if engine is loaded and ready
 */
export declare function isEngineReady(): boolean;
/**
 * Get engine loading state
 */
export declare function getEngineState(): typeof engineState;
/**
 * Apply JSON operations to the engine
 */
export declare function applyOperations(ops: JsonOps): boolean;
/**
 * Get current scene state snapshot
 */
export declare function getSceneSnapshot(): SceneSnapshot | null;
/**
 * Generate share link for current scene state
 */
export declare function generateShareLink(): string;
/**
 * Get engine information and capabilities
 */
export declare function getEngineInfo(): EngineInfo | null;
/**
 * Mount file data in engine filesystem
 */
export declare function mountFile(name: string, data: Uint8Array): string;
/**
 * Check if engine application is ready
 */
export declare function checkApplicationReady(): boolean;
export {};
//# sourceMappingURL=engine.d.ts.map